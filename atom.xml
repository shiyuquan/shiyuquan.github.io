<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://shiyuquan.github.io/"/>
  <updated>2018-09-25T01:09:03.575Z</updated>
  <id>https://shiyuquan.github.io/</id>
  
  <author>
    <name>大腿君的大腿君</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>分享vip视频免费看的方法</title>
    <link href="https://shiyuquan.github.io/2018/09/24/%E5%88%86%E4%BA%ABvip%E8%A7%86%E9%A2%91%E5%85%8D%E8%B4%B9%E7%9C%8B%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://shiyuquan.github.io/2018/09/24/分享vip视频免费看的方法/</id>
    <published>2018-09-24T14:38:10.000Z</published>
    <updated>2018-09-25T01:09:03.575Z</updated>
    
    <content type="html"><![CDATA[<p>分享个小福利，免费看各种VIP的方法。亲测可用(不能用无写来干嘛呢…我是不是有点…emmmmmmm…)<br><a id="more"></a></p><h1 id="百度方法"><a href="#百度方法" class="headerlink" title="百度方法"></a>百度方法</h1><p>百度搜索关键字<code>vip视频解析</code>。大概劳动流程都是打开解析网站，然后找到你想看的vip电影，复制网址，粘贴到解析网站，balabalabala…就可以了。可能有些解析网站没有视频源，可以换一个网站试试。分享几个解析网站吧<br><a href="http://www.5ifxw.com/vip/" target="_blank" rel="noopener">http://www.5ifxw.com/vip/</a><br><a href="http://live.gopartook.com/" target="_blank" rel="noopener">http://live.gopartook.com/</a><br><a href="http://tv.dsqndh.com" target="_blank" rel="noopener">http://tv.dsqndh.com</a><br><a href="http://51.ruyo.net/p/3127.html" target="_blank" rel="noopener">http://51.ruyo.net/p/3127.html</a></p><h2 id="操作演示"><a href="#操作演示" class="headerlink" title="操作演示"></a>操作演示</h2><p>可能有些人看上面的方法还是不懂操作，那么来演示一遍八<br>爱奇艺为例，打开，到vip电影里面随便点一部，随便选了红色框框的那个什么鬼电影<br><img src="/images/vip解析1.png" alt=""><br>进去后复制网站链接，下面画红色框框的，网址有多少复制多少哦<br><img src="/images/vip解析2.png" alt=""><br>复制好后，某度搜索<code>VIP视频在线解析</code>,嗯有结果了<br><img src="/images/vip解析3.png" alt=""><br>就选第一个来试试<br>进去后往下翻，看见下图有个播放地址的东东，把你刚刚复制的网址粘贴进来，点击开始解析！！<br><img src="/images/vip解析4.png" alt=""><br>然后就可以啦，484很简单(如果提示没有flash，就点它下个)<br><img src="/images/vip解析5.png" alt=""></p><h1 id="谷歌浏览器插件-油猴"><a href="#谷歌浏览器插件-油猴" class="headerlink" title="谷歌浏览器插件(油猴)"></a>谷歌浏览器插件(油猴)</h1><p>谷歌的插件很强大的，国内不给下，科学上网呗(无奈ing)。我这分享了个以前版本的，虽然老吧，还能用…别介哈<br>梯子<a href="https://pan.baidu.com/s/1qSPST6xKhHRWXD5_m9qf8Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1qSPST6xKhHRWXD5_m9qf8Q</a> 密码: i55g<br>里面有个<code>Tampermonkey油猴插件.crx</code>的文件，下载拖到谷歌扩展程序里面<br>扩展程序网址输入<code>chrome://extensions/</code>就可以进去了，.crx文件拖进去就行<br><img src="/images/vip解析6.png" alt=""><br>好了后看网址栏右边多了个图标<br><img src="/images/vip解析7.png" alt=""><br>鼠标左键点击-&gt;出来个栏，点击<code>添加新脚本</code>-&gt;点击右上<code>实用工具</code>导航栏-&gt;压缩包那里点击选择文件<br><img src="/images/vip解析8.png" alt=""><br>选择刚刚云盘下载的那个压缩文件，打开就行<br><img src="/images/vip解析9.png" alt=""><br>完了点击已安装脚本<br><img src="/images/vip解析10.png" alt=""><br>好了会有东西的<br>接下来找到你想看的vip视频，还是以爱奇艺为栗子<br>打开爱奇艺，网站左上角有黄色模块，里面都是大神提供的解析网站…就和上面某度的辣个一样一样的<br><img src="/images/vip解析11.png" alt=""><br>还是刚刚的哪一部电影，点进去八，没有会员不给看哒…进去点击左上角的黄色东东，我以无名小站为栗子，点击无名小站<br><img src="/images/vip解析12.png" alt=""><br>会有个新的网站出来，不出意外的话，你就可以看你的vip了。是不是美滋滋。如果提示没有flash，跟提示下载就行。<br><img src="/images/vip解析13.png" alt=""><br>balabalabala…<br>ps：包里面有些其他的功能，安装了用就行，哇卡卡卡。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;分享个小福利，免费看各种VIP的方法。亲测可用(不能用无写来干嘛呢…我是不是有点…emmmmmmm…)&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>java短信接口实现短信验证码注册登录</title>
    <link href="https://shiyuquan.github.io/2018/09/23/java%E7%9F%AD%E4%BF%A1%E6%8E%A5%E5%8F%A3%E5%AE%9E%E7%8E%B0%E7%9F%AD%E4%BF%A1%E9%AA%8C%E8%AF%81%E7%A0%81%E6%B3%A8%E5%86%8C%E7%99%BB%E5%BD%95/"/>
    <id>https://shiyuquan.github.io/2018/09/23/java短信接口实现短信验证码注册登录/</id>
    <published>2018-09-23T05:46:00.000Z</published>
    <updated>2018-09-23T07:11:38.052Z</updated>
    
    <content type="html"><![CDATA[<p>springboot项目的短信接口实现，使用三方短信接口平<a href="http://www.miaodiyun.com/" target="_blank" rel="noopener">秒滴</a><br><a id="more"></a></p><h1 id="场景重现"><a href="#场景重现" class="headerlink" title="场景重现"></a>场景重现</h1><p>我：登录做完啦(一脸舒适)<br>某：看一下？<br>我：来来来<br>balabalabala…..<br>某：完了？<br>我：对啊<br>某：现在都短信验证好吗<br>我：……(打不死你)<br>…<br>…</p><h1 id="大致思路"><a href="#大致思路" class="headerlink" title="大致思路"></a>大致思路</h1><p>找短信接口-&gt;实现短信api-&gt;生成验证码-&gt;发短信-&gt;保存验证码-&gt;收到短信-&gt;输入验证码-&gt;提交验证-&gt;finish(成不成功看天命吧……)</p><h1 id="注册短信平台"><a href="#注册短信平台" class="headerlink" title="注册短信平台"></a>注册短信平台</h1><p>首先我们没有通信大佬们的支持，emmmm，咋办捏？只能用三方的平台啦(无奈ing)，百啊百度啊度…..决定就是你啦！<a href="http://www.miaodiyun.com/" target="_blank" rel="noopener">秒滴</a>，主要是有免费的一百多条短信可以用，测试开发完全足够了，谁叫我们穷呢？</p><h2 id="注册登录"><a href="#注册登录" class="headerlink" title="注册登录"></a>注册登录</h2><p>这个不多说了。官网 <a href="http://www.miaodiyun.com" target="_blank" rel="noopener">http://www.miaodiyun.com</a></p><h2 id="新建短信模板"><a href="#新建短信模板" class="headerlink" title="新建短信模板"></a>新建短信模板</h2><p>配置管理-&gt;验证码短信模板-&gt;新建模板<br><img src="/images/短信接口1.png" alt=""><br>简历模板提交等待吧(ps 可能不成功，公司尽量写上市的吧…)</p><h2 id="查看token"><a href="#查看token" class="headerlink" title="查看token"></a>查看token</h2><p>模板提交成功后去 用户中心-&gt;账户管理-&gt;查看token 获取token和sid，记住了，等下有用的<br><img src="/images/短信接口2.png" alt=""></p><h2 id="下载官方给的demo源码"><a href="#下载官方给的demo源码" class="headerlink" title="下载官方给的demo源码"></a>下载官方给的demo源码</h2><p>点击API文档<br><img src="/images/短信接口3.png" alt=""><br>进入开发者中心，点击导航栏的demo下载，下载java demo<br><img src="/images/短信接口4.png" alt=""><br>下载完后，自己查看下源码，demo很简单的，使用也就是copy，短信发成功了就是结合自己项目改改代码就行。</p><h1 id="植入源码到springboot项目"><a href="#植入源码到springboot项目" class="headerlink" title="植入源码到springboot项目"></a>植入源码到springboot项目</h1><p>解压下载的demo，看源码，搬砖。我这里使用短信接口实现短信验证码注册功能，附上代码</p><p>项目结构<br><img src="/images/短信接口5.png" alt=""><br>功能需要的文件用框框画上了，一个一个来吧</p><h2 id="config-java"><a href="#config-java" class="headerlink" title="config.java"></a>config.java</h2><p>短信接口的基础配置文件,刚刚官网获取的token和sid需要配置在这里<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.vue.vuedemo.utils.TextMessageCode;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> shiyuquan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2018/9/17 21:12</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Config</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * url前半部分</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String BASE_URL = <span class="string">"https://api.miaodiyun.com/20150822"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开发者注册后系统自动生成的账号，可在官网登录后查看</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ACCOUNT_SID = <span class="string">"114e02e7a1c344f58b5abde18eb1946b"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 开发者注册后系统自动生成的TOKEN，可在官网登录后查看</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String AUTH_TOKEN = <span class="string">"5a4a30084dc143d29cd0af62dd619f25"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 响应数据类型, JSON或XML</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String RESP_DATA_TYPE = <span class="string">"json"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="CodeUtil-java"><a href="#CodeUtil-java" class="headerlink" title="CodeUtil.java"></a>CodeUtil.java</h2><p>随机6位的验证码工具类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.vue.vuedemo.utils.TextMessageCode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> shiyuquan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2018/9/17 20:51</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CodeUtil</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRandNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String randNum = <span class="keyword">new</span> Random().nextInt(<span class="number">1000000</span>)+<span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (randNum.length()!=<span class="number">6</span>) &#123;   <span class="comment">//如果生成的不是6位数随机数则返回该方法继续生成</span></span><br><span class="line">            <span class="keyword">return</span> getRandNum();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> randNum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="HttpUtil-java"><a href="#HttpUtil-java" class="headerlink" title="HttpUtil.java"></a>HttpUtil.java</h2><p>http请求的工具类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.vue.vuedemo.utils.TextMessageCode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.codec.digest.DigestUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> shiyuquan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2018/9/17 21:12</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 构造通用参数timestamp、sig和respDataType</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">createCommonParam</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 时间戳</span></span><br><span class="line">        SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMddHHmmss"</span>);</span><br><span class="line">        String timestamp = sdf.format(<span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 签名</span></span><br><span class="line">        String sig = DigestUtils.md5Hex(Config.ACCOUNT_SID + Config.AUTH_TOKEN + timestamp);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&amp;timestamp="</span> + timestamp + <span class="string">"&amp;sig="</span> + sig + <span class="string">"&amp;respDataType="</span> + Config.RESP_DATA_TYPE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * post请求</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     *            功能和操作</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> body</span></span><br><span class="line"><span class="comment">     *            要post的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">post</span><span class="params">(String url, String body)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            OutputStreamWriter out = <span class="keyword">null</span>;</span><br><span class="line">            BufferedReader in = <span class="keyword">null</span>;</span><br><span class="line">            URL realUrl = <span class="keyword">new</span> URL(url);</span><br><span class="line">            URLConnection conn = realUrl.openConnection();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置连接参数</span></span><br><span class="line">            conn.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">            conn.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">            conn.setConnectTimeout(<span class="number">5000</span>);</span><br><span class="line">            conn.setReadTimeout(<span class="number">20000</span>);</span><br><span class="line">            conn.setRequestProperty(<span class="string">"Content-Type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">            <span class="comment">// 提交数据</span></span><br><span class="line">            out = <span class="keyword">new</span> OutputStreamWriter(conn.getOutputStream(), <span class="string">"UTF-8"</span>);</span><br><span class="line">            out.write(body);</span><br><span class="line">            out.flush();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取返回数据</span></span><br><span class="line">            in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(conn.getInputStream(), <span class="string">"UTF-8"</span>));</span><br><span class="line">            String line = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">boolean</span> firstLine = <span class="keyword">true</span>; <span class="comment">// 读第一行不加换行符</span></span><br><span class="line">            <span class="keyword">while</span> ((line = in.readLine()) != <span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (firstLine)</span><br><span class="line">                &#123;</span><br><span class="line">                    firstLine = <span class="keyword">false</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    result += System.lineSeparator();</span><br><span class="line">                &#125;</span><br><span class="line">                result += line;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 回调测试工具方法</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> body</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">postHuiDiao</span><span class="params">(String url, String body)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            OutputStreamWriter out = <span class="keyword">null</span>;</span><br><span class="line">            BufferedReader in = <span class="keyword">null</span>;</span><br><span class="line">            URL realUrl = <span class="keyword">new</span> URL(url);</span><br><span class="line">            URLConnection conn = realUrl.openConnection();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置连接参数</span></span><br><span class="line">            conn.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">            conn.setDoInput(<span class="keyword">true</span>);</span><br><span class="line">            conn.setConnectTimeout(<span class="number">5000</span>);</span><br><span class="line">            conn.setReadTimeout(<span class="number">20000</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 提交数据</span></span><br><span class="line">            out = <span class="keyword">new</span> OutputStreamWriter(conn.getOutputStream(), <span class="string">"UTF-8"</span>);</span><br><span class="line">            out.write(body);</span><br><span class="line">            out.flush();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取返回数据</span></span><br><span class="line">            in = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(conn.getInputStream(), <span class="string">"UTF-8"</span>));</span><br><span class="line">            String line = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">boolean</span> firstLine = <span class="keyword">true</span>; <span class="comment">// 读第一行不加换行符</span></span><br><span class="line">            <span class="keyword">while</span> ((line = in.readLine()) != <span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (firstLine)</span><br><span class="line">                &#123;</span><br><span class="line">                    firstLine = <span class="keyword">false</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    result += System.lineSeparator();</span><br><span class="line">                &#125;</span><br><span class="line">                result += line;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="GetMessage-java"><a href="#GetMessage-java" class="headerlink" title="GetMessage.java"></a>GetMessage.java</h2><p>其他地方通过调用这个类的execute方法发送短信，短信发送接口，验证码存放在redis里面，key-value对应的手机号和验证码。关于redis的使用，可以参考我另外一篇博客<a href="https://shiyuquan.github.io/2018/09/19/springBoot%E4%BD%BF%E7%94%A8redis/">springBoot使用redis</a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.vue.vuedemo.utils.TextMessageCode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.vue.vuedemo.utils.RedisService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> shiyuquan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2018/9/17 21:10</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetMessage</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    RedisService redisService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String operation = <span class="string">"/industrySMS/sendSMS"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String accountSid = Config.ACCOUNT_SID;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证码通知短信</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">(String tel)</span></span>&#123;</span><br><span class="line">        HttpUtil httpUtil = <span class="keyword">new</span> HttpUtil();</span><br><span class="line">        CodeUtil codeUtil = <span class="keyword">new</span> CodeUtil();</span><br><span class="line">        <span class="comment">// 获取验证码</span></span><br><span class="line">        String code = codeUtil.getRandNum();</span><br><span class="line">        <span class="comment">// 设置短信内容</span></span><br><span class="line">        String smsContent = <span class="string">"【宝驰信科技】尊敬的用户，您的验证码为"</span>+code;</span><br><span class="line">        String tmpSmsContent = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            tmpSmsContent = URLEncoder.encode(smsContent, <span class="string">"UTF-8"</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 发送的url</span></span><br><span class="line">        String url = Config.BASE_URL + operation;</span><br><span class="line">        <span class="comment">// 发送的请求体</span></span><br><span class="line">        String body = <span class="string">"accountSid="</span> + accountSid + <span class="string">"&amp;to="</span> + tel + <span class="string">"&amp;smsContent="</span> + tmpSmsContent</span><br><span class="line">                + httpUtil.createCommonParam();</span><br><span class="line">        <span class="comment">// post请求</span></span><br><span class="line">        String result = httpUtil.post(url, body);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这里是个自己挖的坑，还好平台返回的格式固定，我就截取了字符串做判断，其实平台有提供回调方法的，我当时懒得动...你懂的，想看的话去源码找吧，在huidiao包里面</span></span><br><span class="line">        <span class="keyword">char</span>[] res = result.toCharArray();</span><br><span class="line">        String codeResult = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">13</span>; i&lt;=<span class="number">17</span>; i++)&#123;</span><br><span class="line">            codeResult = codeResult + String.valueOf(res[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 00000代表成功了</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">"00000"</span>.equals(codeResult)) &#123;</span><br><span class="line">            <span class="comment">// 发送成功后将电话号码和验证码存在redis，设置有效期为5分钟。之后前台要发送验证需要在redis查询是否有记录</span></span><br><span class="line">            redisService.set(tel, code, <span class="number">300L</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> codeResult;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="UserController-java"><a href="#UserController-java" class="headerlink" title="UserController.java"></a>UserController.java</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 注册接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/register"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> MyResult&lt;User&gt; <span class="title">addUser</span><span class="params">(@RequestBody User user, @RequestParam String checkNum)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(user.getUserName())) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyResult&lt;User&gt;().error(<span class="keyword">null</span>, <span class="number">600</span>, <span class="string">"请输入账号"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(userService.findUser(user.getUserName()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MyResult&lt;User&gt;().error(<span class="keyword">null</span>, <span class="number">600</span>, <span class="string">"账号已存在，请重新输入"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(user.getPhoneNum())) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyResult&lt;User&gt;().error(<span class="keyword">null</span>, <span class="number">600</span>, <span class="string">"请输入手机号"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(user.getPassword())) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyResult&lt;User&gt;().error(<span class="keyword">null</span>, <span class="number">600</span>, <span class="string">"请输入密码"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 验证码非空判断</span></span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(checkNum)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyResult&lt;User&gt;().error(<span class="keyword">null</span>, <span class="number">600</span>, <span class="string">"请输入验证码"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 验证码非空，获取redis存的手机号对应的验证码，进行验证，失败balabalabala，否则成功</span></span><br><span class="line">        String code = (String)redisService.get(user.getPhoneNum());</span><br><span class="line">        <span class="keyword">if</span>(StringUtils.isEmpty(code)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MyResult&lt;User&gt;().error(<span class="keyword">null</span>, <span class="number">600</span>, <span class="string">"验证码不存在"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!checkNum.equals(code)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MyResult&lt;User&gt;().error(<span class="keyword">null</span>, <span class="number">600</span>, <span class="string">"验证码错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    user.setUserId(UUID.randomUUID().toString());</span><br><span class="line">    user.setId(UUID.randomUUID().toString());</span><br><span class="line">    User user1 = userService.addUser(user);</span><br><span class="line">    <span class="keyword">if</span>(user1 == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyResult&lt;User&gt;().error(user1, <span class="number">600</span>, <span class="string">"新增失败"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> MyResult&lt;User&gt;().success(user1, <span class="number">200</span>, <span class="string">"success"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取验证码接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping</span>(value = <span class="string">"/getcode"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> MyResult&lt;String&gt; <span class="title">sendMessage</span><span class="params">(@RequestParam String phoneNum)</span> </span>&#123;</span><br><span class="line">    String res = getMessage.execute(phoneNum);</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">"00000"</span>.equals(res)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MyResult&lt;String&gt;().success(<span class="keyword">null</span>, <span class="number">200</span>, getMessage.execute(phoneNum));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> MyResult&lt;String&gt;().success(<span class="keyword">null</span>, <span class="number">200</span>, <span class="string">"获取验证码失败"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;springboot项目的短信接口实现，使用三方短信接口平&lt;a href=&quot;http://www.miaodiyun.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;秒滴&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://shiyuquan.github.io/tags/java/"/>
    
      <category term="springboot" scheme="https://shiyuquan.github.io/tags/springboot/"/>
    
      <category term="短信接口" scheme="https://shiyuquan.github.io/tags/%E7%9F%AD%E4%BF%A1%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>springBoot使用redis</title>
    <link href="https://shiyuquan.github.io/2018/09/19/springBoot%E4%BD%BF%E7%94%A8redis/"/>
    <id>https://shiyuquan.github.io/2018/09/19/springBoot使用redis/</id>
    <published>2018-09-19T02:56:21.000Z</published>
    <updated>2018-09-19T03:21:09.522Z</updated>
    
    <content type="html"><![CDATA[<p>学习redis在springboot环境下的部署，使用RedisTemplate操作。springboot版本为:2.0.4<br><a id="more"></a></p><h1 id="pom-xml引用依赖"><a href="#pom-xml引用依赖" class="headerlink" title="pom.xml引用依赖"></a>pom.xml引用依赖</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.commons&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;commons-pool2&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.6.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h1 id="application-yml配置文件"><a href="#application-yml配置文件" class="headerlink" title="application.yml配置文件"></a>application.yml配置文件</h1><p>加入redis配置。我使用Lettuce配置redis启动失败，原因未知。改用jedis后成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  redis:</span><br><span class="line">    host: 127.0.0.1</span><br><span class="line">    port: 6379</span><br><span class="line">    #意思是连接了1000毫秒后没接连成功就断开连接。</span><br><span class="line">    timeout: 1000</span><br><span class="line">    #Lettuce 当多线程使用同一连接实例时，是线程安全的 jedis不安全</span><br><span class="line">    jedis:</span><br><span class="line">      pool:</span><br><span class="line">        #最大空闲数</span><br><span class="line">        max-idle: 8</span><br><span class="line">        #连接池的最大数据库连接数。设为0表示无限制</span><br><span class="line">        max-active: 0</span><br><span class="line">        #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。</span><br><span class="line">        max-wait: 1000</span><br></pre></td></tr></table></figure></p><h1 id="RedisConfig-java"><a href="#RedisConfig-java" class="headerlink" title="RedisConfig.java"></a>RedisConfig.java</h1><p>redis配置类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.vue.vuedemo.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonAutoDetect;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.PropertyAccessor;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.CacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.EnableCaching;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheWriter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.Duration;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> shiyuquan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2018/9/18 20:31</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CacheManager <span class="title">cacheManager</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 设置缓存有效期</span></span><br><span class="line">        RedisCacheConfiguration redisCacheConfiguration = RedisCacheConfiguration.defaultCacheConfig().entryTtl(Duration.ofSeconds(<span class="number">5</span>));</span><br><span class="line">        <span class="keyword">return</span> RedisCacheManager.builder(RedisCacheWriter.nonLockingRedisCacheWriter(redisConnectionFactory))</span><br><span class="line">                .cacheDefaults(redisCacheConfiguration).build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;Object, Object&gt; <span class="title">redisTemplate</span><span class="params">(RedisConnectionFactory connectionFactory)</span> </span>&#123;</span><br><span class="line">        RedisTemplate&lt;Object, Object&gt; template = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">        template.setConnectionFactory(connectionFactory);</span><br><span class="line">        <span class="comment">//使用Jackson2JsonRedisSerializer来序列化和反序列化redis的value值（默认使用JDK的序列化方式）</span></span><br><span class="line">        Jackson2JsonRedisSerializer serializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer(Object.class);</span><br><span class="line">        ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        mapper.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        mapper.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        serializer.setObjectMapper(mapper);</span><br><span class="line">        template.setValueSerializer(serializer);</span><br><span class="line">        <span class="comment">//使用StringRedisSerializer来序列化和反序列化redis的key值</span></span><br><span class="line">        template.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        template.afterPropertiesSet();</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> StringRedisTemplate <span class="title">stringRedisTemplate</span><span class="params">(RedisConnectionFactory factory)</span> </span>&#123;</span><br><span class="line">        StringRedisTemplate stringRedisTemplate = <span class="keyword">new</span> StringRedisTemplate();</span><br><span class="line">        stringRedisTemplate.setConnectionFactory(factory);</span><br><span class="line">        <span class="keyword">return</span> stringRedisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="使用RedisTemplate访问Redis数据结构"><a href="#使用RedisTemplate访问Redis数据结构" class="headerlink" title="使用RedisTemplate访问Redis数据结构"></a>使用RedisTemplate访问Redis数据结构</h1><p>感谢大神的分享<a href="https://www.jianshu.com/p/7bf5dc61ca06/" target="_blank" rel="noopener">https://www.jianshu.com/p/7bf5dc61ca06/</a></p><h1 id="RedisTemplate二次封装-RedisService-java"><a href="#RedisTemplate二次封装-RedisService-java" class="headerlink" title="RedisTemplate二次封装 RedisService.java"></a>RedisTemplate二次封装 RedisService.java</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.vue.vuedemo.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> shiyuquan</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2018/9/18 20:58</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> TODO</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisTemplate redisTemplate;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 写入缓存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span><span class="params">(<span class="keyword">final</span> String key, Object value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ValueOperations&lt;Serializable, Object&gt; operations = redisTemplate.opsForValue();</span><br><span class="line">            operations.set(key, value);</span><br><span class="line">            result = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 写入缓存设置时效时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">set</span><span class="params">(<span class="keyword">final</span> String key, Object value, Long expireTime)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> result = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ValueOperations&lt;Serializable, Object&gt; operations = redisTemplate.opsForValue();</span><br><span class="line">            operations.set(key, value);</span><br><span class="line">            redisTemplate.expire(key, expireTime, TimeUnit.SECONDS);</span><br><span class="line">            result = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除对应的value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> keys</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">final</span> String... keys)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (String key : keys) &#123;</span><br><span class="line">            remove(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量删除key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pattern</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removePattern</span><span class="params">(<span class="keyword">final</span> String pattern)</span> </span>&#123;</span><br><span class="line">        Set&lt;Serializable&gt; keys = redisTemplate.keys(pattern);</span><br><span class="line">        <span class="keyword">if</span> (keys.size() &gt; <span class="number">0</span>)</span><br><span class="line">            redisTemplate.delete(keys);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除对应的value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">final</span> String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (exists(key)) &#123;</span><br><span class="line">            redisTemplate.delete(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断缓存中是否有对应的value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">exists</span><span class="params">(<span class="keyword">final</span> String key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> redisTemplate.hasKey(key);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 读取缓存</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">get</span><span class="params">(<span class="keyword">final</span> String key)</span> </span>&#123;</span><br><span class="line">        Object result = <span class="keyword">null</span>;</span><br><span class="line">        ValueOperations&lt;Serializable, Object&gt; operations = redisTemplate.opsForValue();</span><br><span class="line">        result = operations.get(key);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 哈希 添加</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hashKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">hmSet</span><span class="params">(String key, Object hashKey, Object value)</span></span>&#123;</span><br><span class="line">        HashOperations&lt;String, Object, Object&gt; hash = redisTemplate.opsForHash();</span><br><span class="line">        hash.put(key,hashKey,value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 哈希获取数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> hashKey</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">hmGet</span><span class="params">(String key, Object hashKey)</span></span>&#123;</span><br><span class="line">        HashOperations&lt;String, Object, Object&gt;  hash = redisTemplate.opsForHash();</span><br><span class="line">        <span class="keyword">return</span> hash.get(key,hashKey);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 列表添加</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> k</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> v</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lPush</span><span class="params">(String k,Object v)</span></span>&#123;</span><br><span class="line">        ListOperations&lt;String, Object&gt; list = redisTemplate.opsForList();</span><br><span class="line">        list.rightPush(k,v);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 列表获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> k</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> l</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> l1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Object&gt; <span class="title">lRange</span><span class="params">(String k, <span class="keyword">long</span> l, <span class="keyword">long</span> l1)</span></span>&#123;</span><br><span class="line">        ListOperations&lt;String, Object&gt; list = redisTemplate.opsForList();</span><br><span class="line">        <span class="keyword">return</span> list.range(k,l,l1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 集合添加</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(String key,Object value)</span></span>&#123;</span><br><span class="line">        SetOperations&lt;String, Object&gt; set = redisTemplate.opsForSet();</span><br><span class="line">        set.add(key,value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 集合获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Object&gt; <span class="title">setMembers</span><span class="params">(String key)</span></span>&#123;</span><br><span class="line">        SetOperations&lt;String, Object&gt; set = redisTemplate.opsForSet();</span><br><span class="line">        <span class="keyword">return</span> set.members(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有序集合添加</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scoure</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">zAdd</span><span class="params">(String key,Object value,<span class="keyword">double</span> scoure)</span></span>&#123;</span><br><span class="line">        ZSetOperations&lt;String, Object&gt; zset = redisTemplate.opsForZSet();</span><br><span class="line">        zset.add(key,value,scoure);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 有序集合获取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scoure</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scoure1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;Object&gt; <span class="title">rangeByScore</span><span class="params">(String key,<span class="keyword">double</span> scoure,<span class="keyword">double</span> scoure1)</span></span>&#123;</span><br><span class="line">        ZSetOperations&lt;String, Object&gt; zset = redisTemplate.opsForZSet();</span><br><span class="line">        <span class="keyword">return</span> zset.rangeByScore(key, scoure, scoure1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习redis在springboot环境下的部署，使用RedisTemplate操作。springboot版本为:2.0.4&lt;br&gt;
    
    </summary>
    
    
      <category term="java" scheme="https://shiyuquan.github.io/tags/java/"/>
    
      <category term="springboot" scheme="https://shiyuquan.github.io/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>redis安装使用</title>
    <link href="https://shiyuquan.github.io/2018/09/19/redis%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>https://shiyuquan.github.io/2018/09/19/redis安装使用/</id>
    <published>2018-09-19T01:59:54.000Z</published>
    <updated>2018-09-19T03:18:10.433Z</updated>
    
    <content type="html"><![CDATA[<p>做手机短信验证的时候，考虑验证码的存放问题使用说明方式。因为验证码的时效性，放入关系数据库可以实现，但是较麻烦。最终想到缓存可以完美实现，正好没用过也想学redis，就顺带学习redis使用和安装。<br><a id="more"></a></p><h1 id="Redis简介"><a href="#Redis简介" class="headerlink" title="Redis简介"></a>Redis简介</h1><p>Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。 它支持多种类型的数据结构，如 字符串（strings）， 散列（hashes）， 列表（lists）， 集合（sets）， 有序集合（sorted sets） 与范围查询， bitmaps， hyperloglogs 和 地理空间（geospatial） 索引半径查询。 Redis 内置了 复制（replication），LUA脚本（Lua scripting）， LRU驱动事件（LRU eviction），事务（transactions） 和不同级别的 磁盘持久化（persistence）， 并通过 Redis哨兵（Sentinel）和自动 分区（Cluster）提供高可用性（high availability）。<br>中文官网：<a href="http://www.redis.cn/" target="_blank" rel="noopener">http://www.redis.cn/</a></p><h1 id="Redis应用场景"><a href="#Redis应用场景" class="headerlink" title="Redis应用场景"></a>Redis应用场景</h1><p>参考<a href="https://www.cnblogs.com/NiceCui/p/7794659.html" target="_blank" rel="noopener">https://www.cnblogs.com/NiceCui/p/7794659.html</a></p><h1 id="Redis-Windows-安装"><a href="#Redis-Windows-安装" class="headerlink" title="Redis Windows 安装"></a>Redis Windows 安装</h1><p>下载链接: <a href="https://github.com/MicrosoftArchive/redis/releases" target="_blank" rel="noopener">https://github.com/MicrosoftArchive/redis/releases</a><br>1.redis本身没有提供微软的redis，windows下的redis由微软自己提供的。点击下载链接 找到redis-x64-*.zip点击下载。<br>2.解压文件到自己制定的位置，我放在E:\Redis目录下，至此redis安装完成</p><h1 id="Redis-使用"><a href="#Redis-使用" class="headerlink" title="Redis 使用"></a>Redis 使用</h1><ol><li>win+r 输入cmd打开命令工具</li><li><p>进入安装目录启动redis 命令：redis-server.exe redis.windows.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">E:</span><br><span class="line">CD Redis</span><br><span class="line">redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure></li><li><p>测试链接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli.exe -h 127.0.0.1 -p 6379</span><br></pre></td></tr></table></figure></li></ol><p>-h 127.0.0.1 是host<br>-p 6379 是端口<br>插入键值对试一下 set key value,对应键值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set name shiyuquan</span><br></pre></td></tr></table></figure></p><p>查看指定键的值 get key<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get name</span><br></pre></td></tr></table></figure></p><p>得到结果 shiyuquan</p><p>redis命令参考 <a href="http://www.redis.net.cn/order/" target="_blank" rel="noopener">http://www.redis.net.cn/order/</a></p><h1 id="Redis-图形界面"><a href="#Redis-图形界面" class="headerlink" title="Redis 图形界面"></a>Redis 图形界面</h1><p>市面上的图形界面有很多，我这里选用了国人开发的<a href="http://www.treesoft.cn/dms.html" target="_blank" rel="noopener">TreeNMS</a><br>进官网，下载TreeNMS for Redis<br>解压zip到你指定的位置，进去看<code>说明.txt</code>跟着做就行</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;做手机短信验证的时候，考虑验证码的存放问题使用说明方式。因为验证码的时效性，放入关系数据库可以实现，但是较麻烦。最终想到缓存可以完美实现，正好没用过也想学redis，就顺带学习redis使用和安装。&lt;br&gt;
    
    </summary>
    
    
      <category term="redis" scheme="https://shiyuquan.github.io/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>markdown 语法</title>
    <link href="https://shiyuquan.github.io/2018/09/14/markdown-0/"/>
    <id>https://shiyuquan.github.io/2018/09/14/markdown-0/</id>
    <published>2018-09-14T06:16:37.000Z</published>
    <updated>2018-09-14T06:19:25.406Z</updated>
    
    <content type="html"><![CDATA[<p>第一篇博客，记录博客写法。博客使用<a href="http://www.markdown.cn/" target="_blank" rel="noopener">markdown</a>语法，本文记录其大致语法规范<br><a id="more"></a></p><h2 id="TOC"><a href="#TOC" class="headerlink" title="TOC"></a>TOC</h2><p>根据标题生成目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[TOC]</span><br></pre></td></tr></table></figure></p><p>示例(..没兼容到)<br>[TOC]</p><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br><span class="line">#### 这是四级标题</span><br><span class="line">##### 这是五级标题</span><br><span class="line">###### 这是六级标题</span><br><span class="line">or</span><br><span class="line">一级标题</span><br><span class="line">===</span><br><span class="line">二级标</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>示例</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标"><a href="#二级标" class="headerlink" title="二级标"></a>二级标</h2><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;引用的</span><br><span class="line">&gt;&gt;这也是</span><br></pre></td></tr></table></figure><p>示例</p><blockquote><p>引用的</p><blockquote><p>这也是</p></blockquote></blockquote><h2 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*这是斜体* 或 _这也是斜体_ </span><br><span class="line">**这是粗体**</span><br><span class="line">***这是加粗斜体***</span><br><span class="line">~~这是删除线~~</span><br></pre></td></tr></table></figure><p>示例<br><em>这是斜体</em> 或 <em>这也是斜体</em><br><strong>这是粗体</strong><br><strong><em>这是加粗斜体</em></strong><br><del>这是删除线</del></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">***</span><br></pre></td></tr></table></figure><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>balabala</p><hr><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单行代码：代码之间分别用一个反引号包起来</span><br><span class="line">代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行,三个反引号后加编程语言，提供颜色支持</span><br><span class="line">tab缩进：</span><br></pre></td></tr></table></figure><p>示例<br>单行代码<br><code>balabala</code><br>代码块<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">balabala</span><br></pre></td></tr></table></figure></p><pre><code>巴腊拉巴</code></pre><p>javascript<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    num+=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(num);</span><br></pre></td></tr></table></figure></p><p>java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[超链接名](超链接地址 &quot;超链接title&quot;)</span><br><span class="line">title可加可不加</span><br><span class="line">行内形式：[我的博客](https://kevinpu.github.io/)</span><br><span class="line">参考形式：[我的博客][1]，有一个很好的平台-[简书][2]</span><br><span class="line">[1]:https://kevinpu.github.io/</span><br><span class="line">[2]:http://www.jianshu.com/</span><br><span class="line">自动链接：我的博客地址&lt;https://kevinpu.github.io/&gt;</span><br></pre></td></tr></table></figure><p>示例<br>行内形式：<a href="https://kevinpu.github.io/" target="_blank" rel="noopener">我的博客</a><br>参考形式：[我的博客][1]，有一个很好的平台-[简书][2]<br>[1]:<a href="https://kevinpu.github.io/" target="_blank" rel="noopener">https://kevinpu.github.io/</a><br>[2]:<a href="http://www.jianshu.com/" target="_blank" rel="noopener">http://www.jianshu.com/</a><br>自动链接：我的博客地址<a href="https://kevinpu.github.io/" target="_blank" rel="noopener">https://kevinpu.github.io/</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>无序列表：<br>无序列表用 - + * 任何一种都可以<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 列表内容</span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容</span><br><span class="line">注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure></p><p>无序列表效果：</p><ul><li>无序列表项1</li></ul><ul><li>无序列表项2</li></ul><ul><li>无序列表项3</li></ul><p>有序列表：<br>有序列表使用数字加点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.有序列表项1</span><br><span class="line">2.有序列表项2</span><br><span class="line">3.有序列表项3</span><br></pre></td></tr></table></figure></p><p>有序列表效果：<br>1.有序列表项1<br>2.有序列表项2<br>3.有序列表项3</p><p>列表嵌套：</p><ul><li>无序列表项1<ul><li>二级</li><li>二级</li></ul></li></ul><ul><li>无序列表项2</li></ul><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)</span><br><span class="line"></span><br><span class="line">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</span><br><span class="line">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</span><br></pre></td></tr></table></figure><p>示例<br><img src="/images/logo.png" alt="&quot;vue&quot;" title="vue"></p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头</span><br><span class="line">---|:--:|---:</span><br><span class="line">内容|内容|内容</span><br><span class="line">内容|内容|内容</span><br><span class="line"></span><br><span class="line">第二行分割表头和内容。</span><br><span class="line">- 有一个就行，为了对齐，多加了几个</span><br><span class="line">文字默认居左</span><br><span class="line">-两边加：表示文字居中</span><br><span class="line">-右边加：表示文字居右</span><br><span class="line">注：原生的语法两边都要用 | 包起来。此处省略</span><br></pre></td></tr></table></figure><p>示例<br>| 表头1|表头2|表头3|表头4<br>|-| :- | :-: | -: |<br>|默认左对齐|左对齐|居中对其|右对齐|<br>|默认左对齐|左对齐|居中对其|右对齐|<br>|默认左对齐|左对齐|居中对其|右对齐|</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;第一篇博客，记录博客写法。博客使用&lt;a href=&quot;http://www.markdown.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;markdown&lt;/a&gt;语法，本文记录其大致语法规范&lt;br&gt;
    
    </summary>
    
      <category term="其他" scheme="https://shiyuquan.github.io/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="markdown" scheme="https://shiyuquan.github.io/tags/markdown/"/>
    
  </entry>
  
</feed>
